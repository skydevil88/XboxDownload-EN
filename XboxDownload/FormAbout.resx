<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAAACXBIWXMAAAsMAAALDAE/QCLIAAAAB3RJ
        TUUH5AwTCxASc3NqvAAAFI9JREFUeF7VXAdcluUWP7IEWTlwkqiZeTUrK7WrpZXmNnNGoIITzb3APXLm
        1dwDTUm9qbkqM0vTQvg+lgxZMgQcuc1ypFlZ3v//4cVL+H7AB5+K5/c7afDM85zxP+d5XuVh0OEL/5W7
        d+/KguRu4h/bRIZH1ZNBEdWl3SGRpt+KNPkGjcYI25Qiy4zsn/0b3BZt/CI8ZAT6TIj9tyw65qnGirz8
        efbgjzMNi3pG1qT7yfuRtaXbYWslAP/Yxi7+MY1qjTxSv52P0W1YH2P56Z4hZT7yDHEI9A51CSLj/wM9
        Qx0/wu9msM2oIw1aj49pVHNibFNnCqfHYTs15rrjwyDsutpsjwkFpr8vYZd2yeS418Tb4CoHzgXaDY/6
        V51+YVU69wurvMAr1CkEwsh6N8ThRo/Dtne7H7bJl9kGba+jTyaEF4xx5oA7DYuqWzv88i7bPsZyai5q
        1Jr0wdoqSiDtPj1fqf7Y6IbKPOYldnbxi6jR0cdYYf17oY5ZOPU/9ARgPttCaHa/Y8xMjL12cETNNnMT
        Ozm3PigyLuYltYYvf1ykraoE0H+zJoosEYH6y7N7RAJim1QaGP6kVy/DE/t6hpS+rr9JyzHmuNrL4LoP
        2tkDPsqtKQ5nenxLabRPZEvWZG2Vj4hO30xWat0MjtY/prHzgHB3byw2DCf8l95mHiRjzjs4lGBoVNep
        R1s4jo5+Tlak9tNW+oiIApoR/5YsS/Upj9PrCYc5cVCExxxo0EoI6is422Pvhtg/IC2ib7K/hjmS4Zv2
        Ys4VMOnZI6Lq+0+Ja94lMH3IEwuTe2orfUREAbX9ThBNhtvNSexozyglFVW4tpp69A0HaFXVoZFPt+9t
        KDsfmzDCHG7rb7bwjDFueRtcQnobys0dGlmn7fiYl6tMjmvuwDnFNRsqzE96x35Tpr8tIcEjJQqIFJQ5
        VuYldZadp+YwaslHWFhATBMZHf28wJGKyzaRWQnt3XDC7yGyfYtNXtPbfH6s+Zq9GKMHAkB5j90ivkY3
        NQf8nixO8cbca2X7yQ/kP8k9ZOuJqbI0pbda30Ohb8+uVhFiApzxkMinFOD7MLmrQFO0Fvq0Iq2fRP20
        R2bGt5YmcJwBsa84Dwqv3hb+Ym9hNAptfkPbLwdH1HoLmuL05gGR2Ykd5PztDNmQMVqbRZ8YOBDhEN1e
        VmsOANCUdSJxV+A0LUmbMgOUcLoEC31OmSGRtSpPinvVqT6iFgCfFloXaq316ZPMcZL8y2EFA7odtpI5
        iZ3KDgiv1tcr1DlGDw/xZ/hdJHyL7/ykLq49Q+wRCBrJrT+vyWcnZ2qj6tM3Z1fJnbt/AX3Xl2e+zD4U
        CKgK1u7gZXAR8RbZe2ap1rqYRHxDIujDidSAyWwCcEuDHzjQP6xqf2y4GqPYtKNvQuUryhFoS3701Zkl
        KgTPTGgtdb4QCqxmH0O5ldCUn3OEA+d72cdYfgn8S/UGX9E828kb0JzgC5u0UfTp0PkgAT5SgaPKDmQv
        0Q2fRPgfBP93kGsGqFw/Ma5ZNbaRABHjpe1azyJSylWDwjZ+ETUFkYHC2cPo8f9TtrvDU0bk6gkEXRr+
        QWnTwfPrtRFM02fwFclXQ5TqA0vZIDx3A8o+Bj6KcTodOLfGmr+7/ddN2fPjR1ov00T/x7lhvvQ99sj1
        vLG2aGhiLshhexd72Amc5M52tIjztzK0EYpAPLW+YZUJ5SsiL9pmKjVguIX2LB4T/UKNVwDUEGJlTkJH
        bRTTlH49UiWiTGKlvULC9WBGdSRIVFI6LLLOvUCQHxEYLkvxkXo4TDjtp7AWauQNvbVyD72N5TZCO8sx
        V8ThaqOYSZOPNod/eRaa08IJYXo9Bv5bb8L/s+1dmF3Y+5FPt8JJlmJ+BLXWRsuf6FP2nV0hyLEEZisR
        l3fLrlPztN/mT0hmkbD+i9pTChrXHuZ0JLeW6zG1Cge+BNHOgRUCwAJttELSFoRIgqw9Zxbb9A2rNIm5
        j95EegyhnMUmRy5P7ecIYUllmPl+hH5L07YT00WWi8rqFyR3d4RwJ0CTL+qtSY+hYbfQZ/Sdv/6wWpPm
        V/j8LfTiFmXLbQ4J7fltbPiK3gT5MUMzbD0QJuPeFXYelDEGcOB1bYbiE8M8qwYdv4dJHXmuBkDjqh4h
        hT/EHAYKPw/40KZrcCm1Z/rEAgmbU2rO6AInF6E3cGGYtg5gtx9o99nGiFqr0wYp31RcgrbI4mNewA1C
        B/8CTOqHgkwqP4ZbCPaPbexOXwRIoc1ighiCiUK/OL3ABhqw3JRTNocRUuNhBm9VQtjlydOvFZXGRr+o
        AGdFmC3MtwPGPqY3pznMPQKRL0y7FmG1PNVXoq/s1WbToymiyqBQu1aw50t6AxaFPUMdM3E63tAiGyJx
        onJziUCTZro2fahd//Cq/WAeJ/XmKgrDjZxBRGtK66m2U5swL1H9AaIYMl0RtYB39AcrKtOXAXV3ddya
        nbaYS59kjEXewjJuXW+MdVVvjuIwotrWD5O6Ok452gL53Cxt1lxEJ0XghNPp0DPE7qbeIMVh+IoEOO1G
        zKWKqkFE4MOj6jaD9qTpzVEchvb8CoDapQMcvy4RtyALdwAc36o3QHEY6DgJvqfFk7tEPj+9oMgCWo1w
        bPepuuVo7YnUQW+u4jCS4t1LUnqV/iChrTarRsyjGLngTJvD9/yk17mojI1kINq05OlvyvSXFan9tVnN
        J2bmxGfPIT9jRQCmlqU3Z1EZ450H6GwEH6xgxD3akDFK/v77LytEriV6HYvKEM6FgeHunaw2i6xMGyAb
        M8drMxadlqb0QaTtLoJ0D46/CzZlsWDCiAYZzKO7+TSnnh12aYe6vxoRVa/me6FOqXodi8I9Q+yvDAr3
        6MsUAM5PZdiWIroDFuhu3rlqNSDc3Q/+w2JOG74yfnxMI3fklZJ1Iy7bOQOFMg9qh5Si2CVRMpz87/3C
        Kk+L/+WQ1SzYM/FPQUQfw8rkpqwAsL/2U9M0O6E9hN5Kvju3zhrJ6WSs3SLXSpDFrf5hVVrCH4mXwVng
        mL2UkOCD5hQHkeYwSyDI35bPS+zs7B/TGLChlbYl08TKH9tVBpgkDiFaLoxQWW7lSX+Q0MYFYG8dTKSA
        hLowbHsXyuIvq7IvQWVC7CsyKe5VF6hWsH4H8xiS38fyCGs5nX/QdpIPMRNnlXHd8eE2iE694CA9Qy5u
        tWYkmVZAOffkrwkKmjBNGBf9YjWkRt/rrclcBg7cNyuhXRlVTh51pIFMim1WB9jilF5jcxiIOXVo5NON
        MJa4fabtIh9iuZb3V4tTvGxgJoMRQX9G30sQlG/45R3WRM44PK11PrRBpGuwFaPwq+ifqbc2cxhjpAfE
        vlIdiTBvBirRSSNrty8WOCTQ4sXhC0hlWMP+/PSH2ur1iZpD89hyYoo1IscY9P8lZyxEv0sI4wP+hoMf
        H/OyjDhST+ulT+szRgrwi5TFocA8BsCP/JZ7beYy5r8KrW5JK5CW37HoVGFM8RJT278B1dcsAtBktFqF
        zD0/GgOTon9CYlwaGxoF4dx3DYTwfRF+sd/8pHdsmOAW9IqDSTbv5qF1TjDzoOL4U/jRu/CjQ96mi3jt
        W1WQn6vXsLAMeBADU/WgxEfAbPIjpDJKc7admM6kcxyEY1JzqVU4vOFr0v2sKaDBETW1UfQJwgbKrkHT
        rY1MP0lvzMIyDnwa3y6JDBXeBKzRa1QY5iYGhlfvVh1pxOasCXL8epRarB5RMEwGV6cNLAPt+AB9devG
        uRmQ4aqP0S1geaqvHcujdOimKPbKN7KGNaelBJHVvTF+ka+9cegLeVvDEG/Vy+C6Wa9RYRgePxD4xY5X
        M6qQpUO85ehtKKfC+YrUfk446RlYfKH9BNrehMpPXJ02SNWQgbHkyE/IN3RoXtLb6pooMH2IPUztE73x
        CsNQmrVCbPv9hSAbDLRNr1FBzIIVHHz9AeHVhM7UFPGRE53yqrSBDtCc2diw2eVRChSCnfrx8eGl+RyP
        ty2miNClP9YEs2yINR7XG68g9ja4fMIsQL4+s5wC+kyvUX4MR/YnTnKg81Y+XhimLe1+IpjjqSvhhFeb
        Z47m5GVqElDuTMxXmtpIkzVFawnyxsDnhVUdjgBk9nMcWNUmWhft1hoCMrvEAcf+PU6qIiMSqwF6BLNQ
        PmdZqq+zpjnFCr9kjMHbiOkwtzJT4poLtVePJsU1UzgLka0aNhumN1Z+DOAcpDSI/8H/mGWrWOR1ZNJd
        6cTQX1vSP4maMxonvDy1L69kZqGP2WZlijHWbZobopsDtciUJnFtT32uSiNe6GMWzgNYXMULTHU/7hla
        ZqleI1MMjduDDL0MnWHkTxggD9FH8EnKhozR9gjlc7khvXGKwxjzN5jbjK0nptpRW/RuJHgJwXRhTmJH
        ZwSTL/XGMcVQmvnN92OQV6EF6DxDr5EeY2HXAem7tALA1NMeniaFs+jYuw5A1pPNPTlzGGPfgF8bj8ho
        z7RAT5Mu3j6hLiKwlrcLX0pWdaGJr1FAvHzra6zkB6dbqEy4j6Hc7gVJ3ZyYJ7FEkZv4yIE4JShzTGks
        aBJPWW8MSzLmgE+qzOhmh/xJXQ3lprXHh6o3TdAkV2j+Pr0x8jLG/BPr74M/1eUbHVkL5B/3ciFTjHzt
        2pCIWp3eQQYteQr/UGPCfD7qtMWCp2DwX/XGeBDMuXyNbuOCMsZYM8RPi/9nFYCaTo0HEu9emHXB/1yE
        FbxMaKLUcmJcM3f4oQKriV6hTgdnxrd2nhLXQk7cOKpNL/Jp1iQ4Y1+1EE3yFr+WKYgx5xX4oXeJopel
        +qgneDmU+MsPfETFysATQMgGvf65GdgpDrjOTZnsVIRhoE97+KHdeo1zmLgHCxj2NHxyxo0YbersSmDO
        CcE3vQlBF7tsUlTGxjIAXJvh7yLz/3m9dOj8BpFNTEHc/bGXfHER/M/G9cdH2PIWV9YfH6lCIcxiaH4Z
        PSZPgkRrQAj/eALXAo6Mj5HGRb9Uuzh3+ZZirCEEfsiDSJqHlkMEs0x24cyfwV5M3oYQVAK/+b6Jvpsz
        J/J5W1v1WhTa0QxqajK5g1QXQVNK7Tg5W5uS2vc6J5TJcc3LwgFut0TJtrjMQ0bet3F6fEsnFgNzl3xX
        pvZnMs3600q9vmT42St+ER6NAGwlKOeRKG3NP6axG2K/rn1CcMAcVd/B76FxI1SfdenD1D3V5qwAG/yO
        b4j+1Ov7KJgFMxz4iPDLu61YJ1JviUAfJLQh5mNZpCdCvm6RHwf9LfCdKzOAe8SHlx671Lvj8TiB+8I9
        VDIW0aEqn/7mEP0Oa85+ETU6slSat8+jZkSiC4jQb2E/IrnyaBbV+GkVnPV9L0NwyHfgaoawiMj93aOd
        p+byOQnTg7oYOCNvR6jsaprXxszs65hRMCvCA9Ztkeccztu+pDDfJ02Oe63K0Mg696oN9LnGS9uZf27K
        2x7alQIB1mTRb8uJKar9PeI905Xfz1n5GN3m5/YlMK/bw6Pq9uCXfzIv++ns/KQuNDVb2LJF3hA9KKY1
        +BorLjh4/mNrIHtJuxauNIOBBQrRH6Z4zy1wH7CgxVQE3t7eR3wHzRoLPP2LvKPO6QjzOY/IVQ/4RuJ/
        Pqgm4IuxwRG1OvYsgaaVl7H+S9D2Vp34agPgNu7nA+o999DIpxvi8C/ntIP2ZCGHfJ4VCN7c3kdnb6Wp
        m4Gvz67gFczCHM0Awk4AonRj6YAdWRuGU68CgZZY08rLWOt+BiEiY16DD4uqQw2qDEVI4e+JiwaEV5tG
        7QniOyRTNC3+Te065vlaxD3Zg7vsmXb0DXveQvCdoSxWmGkYBPjQvwkrKmvOdxxRNh+Uaqi6DDDTAf4e
        Djsa+3NnbctU2fgerT8+SipsVy8nBtH/4M8llCxfZxBXaBEgMe8iSjpjzfFT4ppXw/pVzTr6yl5rwJN1
        cBO3BkV49ObznOCL+X/qoGh2QgcVCucldnbsYywfBAFNkbkiYZd3SiUIDicxtiCoXhKZuAcCGUxBfHdu
        ndor/Ogc7HH1f5J72rNEU+gP8CAUJp00twaQeCf+jGVVcAWEx1C9BTwO3MdQbv+C5O6ujMIMNhNjm7aH
        b63Du7SC7vPuIw5A3vPjYlte2/DCD6r40uMQuUwxb2sR0Z6jQPadWS77z66xoXUUiQgKmanzs4Son75Q
        nxkhBLaGeVm8fPqwmBVFpBmv9zaUVZ9W7Tg5S32U97GWPhWLOChs+DVMUuBtaEllBJ2rcB+N4Ee1XVmQ
        GOYRGitCUBZ5R/QoGGvfBz9aDr5H25UFif6o9hcCBFqnBfBDvN4CSjJjzUdHRNVvwgI+92Jx2npimvou
        teHX/MLm+Ve8Q12i9BZS0pj5GNYajGjVmM+HU64ZLeNz9Ih1ZxbMnoImYcJayPK3IuGz0L/JYXmGv7wN
        s1qPzMDdM6SM+v6WQeeBUmD6YPnhwkaV8M1MaFMWUcEfk5/VW+CjZETd04AmI6cefd15ULiHJF79Xn1I
        /FDoqx8XC79p4PtB2HMpZMavw8a/ZhjVW+zDZK4BJrUHyWhT+hoiZETfAj5zekDEu7CFx96Vd34g0n7D
        CRmxj1eoS8yjSEWYkEIwkVhDH6zFESFdJdcP9V9f0CN+xkBihuy+S5jMeiBNCfAKdYrAIh/GzeqvnAv4
        ZizW4F7r8+y1CPywJT59sBgxMvBfgWIpViao3M0NqYkXksGdgPjnEE3u6G2wKIyx/vQMcTiDsbf4RdTs
        MiO+VQX5SFUJJfVaeMkSTF5iPYU3rQRjXYJL8eFUGQitQd+wyp6+RrdAOM9oOPXzOHlEv8KUa9U/g/M7
        AwE0xQgUvAjcHcKov+H4KAcIX82149Rsda3z2NCxq6Eia0TVr3mxyEcSe88sswYiLzcprllDP2iXj7E8
        TNH5Q89Qx0Bvg+umXoYntoK38O/qZ6Eu832MFSYMjqj5HgJCAzhcVwYF7TZFlScYLM7cTNFmfUxp16m5
        Yri4TRWqeLvAd8/QBlU8V09t+yl0axX/y0HrhJ8PWfPvMjL7d2zTy+Aqo9CHfVkyvfHHleyr5AdOIv8D
        qD6lKwomoOsAAAAASUVORK5CYII=
</value>
  </data>
</root>